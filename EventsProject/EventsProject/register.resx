<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAABt6SURBVHhe7Z0JWJVVt8dfJolURAwxyIQkcWByokTgAyVF
        S1FIDVQCVExNhTDU1MScynLIuTRNbdBKLSlLSyuzOSvLzObZ5smb38179euu3358u4Rb4cA5nHP09Xn+
        z8H3vMN+13+vtddae+19jJdffrnO8corrxjvvPOOsWLFCuP66683li1bZixdutSYOXOmUVZWZsybN08d
        z8zMNObPn29s2rRJfc6aNcszMTGxd1pa2pzOnTuvjYiIeDYuLu7fLVu2PBoVFXUiNDT0/eDg4I3p6enr
        e/ToMbNr165XT58+3Y/7DR8+XN3jxhtvVPdftWqVet60adMUVq5caTz77LPG22+/bezbt8944403XAJv
        vvmmsWvXLuPxxx83HnvsMeOpp54yHn30UePee+81NmzYYHz44YfGgw8+qN6L97n55puNO++809izZ4/x
        3HPPGVoCHI2qCL7tttuMoqIiY9SoUcaiRYuMqVOn/kvI3NK4ceOfDcP4yxY0atTov8LDw3d27949C2Ih
        mefdfffdxi233GIR7AicjuAZM2Yooa9fv96YMmWKIdqa5+/vf1hHXE3g6+v7R3Jy8s3Sabx27Nhh3Hrr
        rcZNN91kEWxv6AimUWjrXXfdZRQWFiYFBAR8qSPJHvDz8zuWn59/LWZ64cKFimSLYDuiIsFjxowxlixZ
        YmzZssVYvHhxPTHFj+lIcQTCwsL2yRjdFHJpy+7duy2C7QGT4OXLlxtjx45VjReT3CEwMPBbHRGOhIeH
        x/Fhw4b1fvLJJ41XX33V2L9/v1bQzoLbEowgMcdz5swxxo0bN1An/LrEkCFDxr733nsGQINdBW+99Zay
        LG5F8EsvvWQcPHhQNbZbt27X6QTuDHTp0mUWAvv888+N119/XSvwukatCUab6hIQ/Nprrxm//vorjRqi
        E7QzMWLEiBIIRjg7d+40nn76aafimWeeUaRu3769ZgTTO+oSNPrrr782FixYkKoTsCuguLh44EcffWQw
        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
        gg==
</value>
  </data>
</root>