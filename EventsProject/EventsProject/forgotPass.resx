<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>