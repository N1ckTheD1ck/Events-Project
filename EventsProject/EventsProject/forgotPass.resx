<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>